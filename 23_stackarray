/* Array-based Stack with menu (switch) - clean, complete example */
#include <stdio.h>
#include <stdlib.h>

#define MAX 100

int stack[MAX];
int top = -1;

/* Utility */
int isEmpty(void) { return top == -1; }
int isFull(void)  { return top == MAX - 1; }

/* Operations */
void push(int x) {
    if (isFull()) {
        printf("Error: Stack overflow (max size %d).\n", MAX);
        return;
    }
    stack[++top] = x;
    printf("%d pushed onto stack.\n", x);
}

int pop(void) {
    if (isEmpty()) {
        printf("Error: Stack underflow.\n");
        return -1; /* sentinel: caller should know -1 may be a valid value in some uses */
    }
    return stack[top--];
}

int peek(void) {
    if (isEmpty()) {
        printf("Stack is empty.\n");
        return -1;
    }
    return stack[top];
}

void display(void) {
    if (isEmpty()) {
        printf("Stack is empty.\n");
        return;
    }
    printf("Stack (top -> bottom): ");
    for (int i = top; i >= 0; --i) {
        printf("%d ", stack[i]);
    }
    printf("\n");
}

/* Main: menu-driven using switch */
int main(void) {
    int choice;
    int value;

    while (1) {
        printf("\n----- Stack Menu -----\n");
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Peek (Top)\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        if (scanf("%d", &choice) != 1) { 
            /* handle non-integer input */
            printf("Invalid input. Exiting.\n");
            break;
        }

        switch (choice) {
            case 1:
                printf("Enter value to push: ");
                if (scanf("%d", &value) != 1) {
                    printf("Invalid input.\n");
                    /* clear input buffer */
                    int c; while ((c = getchar()) != '\n' && c != EOF) {}
                    break;
                }
                push(value);
                break;

            case 2: {
                int popped = pop();
                if (popped != -1) printf("Popped: %d\n", popped);
                break;
            }

            case 3: {
                int topVal = peek();
                if (topVal != -1) printf("Top element: %d\n", topVal);
                break;
            }

            case 4:
                display();
                break;

            case 5:
                printf("Exiting program.\n");
                return 0;

            default:
                printf("Invalid choice. Please enter 1-5.\n");
        }
    }

    return 0;
}
